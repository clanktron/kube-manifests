---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: pve
  namespace: external
  annotations: 
    kubernetes.io/ingress.class: traefik-crd-internal
spec:
  entryPoints:
    - web
    - websecure
  routes:
  - match: Host(`pve.claytonc.dev`)
    kind: Rule
    services:
    - name: pve
      port: 8006
      scheme: https
      serversTransport: insecure-skip-verify
  tls:
    secretName: pve-tls

---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: pve-tls
  namespace: external
spec:
  secretName: pve-tls
  privateKey:
    rotationPolicy: Always 
  dnsNames:
    - pve.claytonc.dev
  issuerRef:
    name: letsencrypt
    kind: ClusterIssuer
    group: cert-manager.io


---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: pihole-tls
  namespace: external
spec:
  secretName: pihole-tls
  privateKey:
    rotationPolicy: Always 
  dnsNames:
    - dns.claytonc.dev
  issuerRef:
    name: letsencrypt
    kind: ClusterIssuer
    group: cert-manager.io

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: pihole
  namespace: external
  annotations: 
    kubernetes.io/ingress.class: traefik-crd-internal
spec:
  entryPoints:
    - web
    - websecure
  routes:
  - match: Host(`dns.claytonc.dev`)
    kind: Rule
    # middlewares:
    #   - name: traefik-local-whitelist@kubernetescrd
    services:
    - name: pihole
      port: 80
      scheme: http
  tls:
    secretName: pihole-tls

---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: linksys-tls
  namespace: external
spec:
  secretName: linksys-tls
  privateKey:
    rotationPolicy: Always 
  dnsNames:
    - linksys.claytonc.dev
  issuerRef:
    name: letsencrypt
    kind: ClusterIssuer
    group: cert-manager.io

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: linksys
  namespace: external
  annotations: 
    kubernetes.io/ingress.class: traefik-crd-internal
spec:
  entryPoints:
    - web
    - websecure
  routes:
  - match: Host(`linksys.claytonc.dev`)
    kind: Rule
    # middlewares:
    #   - name: traefik-local-whitelist@kubernetescrd
    services:
    - name: linksys
      port: 80
  tls:
    secretName: linksys-tls

---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: nas-claytonc-dev
  namespace: external
spec:
  secretName: truenas-tls
  privateKey:
    rotationPolicy: Always 
  dnsNames:
    - nas.claytonc.dev
  issuerRef:
    name: letsencrypt
    kind: ClusterIssuer
    group: cert-manager.io

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: truenas
  namespace: external
  annotations: 
    kubernetes.io/ingress.class: traefik-crd-internal
spec:
  entryPoints:
    - web
    - websecure
  routes:
  - match: Host(`nas.claytonc.dev`)
    kind: Rule
    # middlewares:
    #   - name: traefik-local-whitelist@kubernetescrd
    services:
    - name: truenas
      port: 443
      scheme: https
      serversTransport: insecure-skip-verify
  tls:
    secretName: truenas-tls